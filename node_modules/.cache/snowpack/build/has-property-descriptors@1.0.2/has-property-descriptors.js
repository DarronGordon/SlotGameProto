import * as esDefineProperty from 'es-define-property';

function getDefaultExportFromNamespaceIfNotNamed (n) {
	return n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;
}

var $defineProperty = /*@__PURE__*/getDefaultExportFromNamespaceIfNotNamed(esDefineProperty);

var hasPropertyDescriptors = function hasPropertyDescriptors() {
	return !!$defineProperty;
};

hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
	// node v0.6 has a bug where array lengths can be Set but not Defined
	if (!$defineProperty) {
		return null;
	}
	try {
		return $defineProperty([], 'length', { value: 1 }).length !== 1;
	} catch (e) {
		// In Firefox 4-22, defining length on an array throws an exception.
		return true;
	}
};

var hasPropertyDescriptors_1 = hasPropertyDescriptors;

export default hasPropertyDescriptors_1;
var hasArrayLengthDefineBug = hasPropertyDescriptors_1.hasArrayLengthDefineBug;
export { hasPropertyDescriptors_1 as __moduleExports, hasArrayLengthDefineBug };
